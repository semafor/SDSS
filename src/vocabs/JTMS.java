/* CVS $Id: $ */
package vocabs; 
import org.apache.jena.rdf.model.*;
import java.io.ByteArrayInputStream;
 
/**
 * Vocabulary definitions from /home/139/Work/Universitetet/INFO216/Ontologies/beliefsystem-2/jtms.owl 
 * @author Auto-generated by schemagen on 20 May 2016 00:06 
 */
public class JTMS {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    private static final String SOURCE = 
           "@prefix :      <http://139.uib.no/INFO216/jtms#> .        \n"
         + "@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .        \n"
         + "@prefix owl:   <http://www.w3.org/2002/07/owl#> .        \n"
         + "@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .        \n"
         + "@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .        \n"
         + ":hasAuxiliaryOpposition        \n"
         + "        a             owl:ObjectProperty ;        \n"
         + "        rdfs:comment  \"Some opposition not affecting the belief, but can aid in explaining the current state of the belief.\" ;        \n"
         + "        rdfs:domain   :Belief .        \n"
         + ":Belief  a                owl:Class ;        \n"
         + "        owl:disjointWith  :Justification .        \n"
         + ":hasOpposition  a           owl:ObjectProperty ;        \n"
         + "        rdfs:domain         :Justification ;        \n"
         + "        rdfs:range          :Belief ;        \n"
         + "        rdfs:subPropertyOf  :hasAntecedent ;        \n"
         + "        owl:inverseOf       :opposes .        \n"
         + ":Premise  a              owl:Class ;        \n"
         + "        rdfs:comment     \"A belief enabled unconditionally.\" ;        \n"
         + "        rdfs:subClassOf  :Belief .        \n"
         + ":Contradiction  a         owl:Class ;        \n"
         + "        rdfs:comment      \"A belief that is always disabled.\" ;        \n"
         + "        rdfs:subClassOf   :Belief ;        \n"
         + "        owl:disjointWith  :Premise , :Justification .        \n"
         + ":justifies  a        owl:ObjectProperty ;        \n"
         + "        rdfs:domain  :Justification ;        \n"
         + "        rdfs:range   :Belief .        \n"
         + ":hasAuxiliarySupport  a  owl:ObjectProperty ;        \n"
         + "        rdfs:comment  \"Some support not affecting the belief, but can aid in explaining the current state of the belief.\" ;        \n"
         + "        rdfs:domain   :Belief .        \n"
         + "<http://139.uib.no/INFO216/jtms>        \n"
         + "        a       owl:Ontology .        \n"
         + ":Justification  a         owl:Class ;        \n"
         + "        rdfs:comment      \"A justification, of which at least one is needed to enable some belief. Has two antecedent lists: in and out. If all antecedents in the in-list are enabled, and all antecedents in the out-list are disabled, the justification holds. It does not hold in all other cases.\" ;        \n"
         + "        owl:disjointWith  :Premise .        \n"
         + ":hasSupport  a              owl:ObjectProperty ;        \n"
         + "        rdfs:domain         :Justification ;        \n"
         + "        rdfs:range          :Belief ;        \n"
         + "        rdfs:subPropertyOf  :hasAntecedent ;        \n"
         + "        owl:inverseOf       :supports .        \n"
         + ":inSameSupportList  a  owl:TransitiveProperty , owl:ObjectProperty .        \n"
         + ":supports  a                owl:ObjectProperty ;        \n"
         + "        rdfs:domain         :Belief ;        \n"
         + "        rdfs:range          :Justification ;        \n"
         + "        rdfs:subPropertyOf  :antecedentOf .        \n"
         + ":antecedentOf  a            owl:ObjectProperty ;        \n"
         + "        rdfs:subPropertyOf  :inSameSupportList ;        \n"
         + "        owl:inverseOf       :hasAntecedent .        \n"
         + ":hasAntecedent  a           owl:ObjectProperty ;        \n"
         + "        rdfs:subPropertyOf  :inSameSupportList .        \n"
         + ":justifiedBy  a        owl:ObjectProperty ;        \n"
         + "        rdfs:domain    :Belief ;        \n"
         + "        rdfs:range     :Justification ;        \n"
         + "        owl:inverseOf  :justifies .        \n"
         + ":hasState  a          owl:FunctionalProperty , owl:DatatypeProperty ;        \n"
         + "        rdfs:comment  \"Whether or not an assumption is enabled.\" ;        \n"
         + "        rdfs:domain   :Belief ;        \n"
         + "        rdfs:range    xsd:boolean .        \n"
         + ":opposes  a                 owl:ObjectProperty ;        \n"
         + "        rdfs:domain         :Belief ;        \n"
         + "        rdfs:range          :Justification ;        \n"
         + "        rdfs:subPropertyOf  :antecedentOf .        \n"
    ;

    /** Read the ontology definition into the source model */ 
    static { 
        m_model.read( new ByteArrayInputStream( SOURCE.getBytes() ), null, "N3" );
    }

    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://139.uib.no/INFO216/jtms#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    public static final Model getSchema() { return m_model; }
    public static final Property ANTECEDENT_OF = m_model.createProperty( "http://139.uib.no/INFO216/jtms#antecedentOf" );
    
    public static final Property HAS_ANTECEDENT = m_model.createProperty( "http://139.uib.no/INFO216/jtms#hasAntecedent" );
    
    /** <p>Some opposition not affecting the belief, but can aid in explaining the current 
     *  state of the belief.</p>
     */
    public static final Property HAS_AUXILIARY_OPPOSITION = m_model.createProperty( "http://139.uib.no/INFO216/jtms#hasAuxiliaryOpposition" );
    
    /** <p>Some support not affecting the belief, but can aid in explaining the current 
     *  state of the belief.</p>
     */
    public static final Property HAS_AUXILIARY_SUPPORT = m_model.createProperty( "http://139.uib.no/INFO216/jtms#hasAuxiliarySupport" );
    
    public static final Property HAS_OPPOSITION = m_model.createProperty( "http://139.uib.no/INFO216/jtms#hasOpposition" );
    
    /** <p>Whether or not an assumption is enabled.</p> */
    public static final Property HAS_STATE = m_model.createProperty( "http://139.uib.no/INFO216/jtms#hasState" );
    
    public static final Property HAS_SUPPORT = m_model.createProperty( "http://139.uib.no/INFO216/jtms#hasSupport" );
    
    public static final Property IN_SAME_SUPPORT_LIST = m_model.createProperty( "http://139.uib.no/INFO216/jtms#inSameSupportList" );
    
    public static final Property JUSTIFIED_BY = m_model.createProperty( "http://139.uib.no/INFO216/jtms#justifiedBy" );
    
    public static final Property JUSTIFIES = m_model.createProperty( "http://139.uib.no/INFO216/jtms#justifies" );
    
    public static final Property OPPOSES = m_model.createProperty( "http://139.uib.no/INFO216/jtms#opposes" );
    
    public static final Property SUPPORTS = m_model.createProperty( "http://139.uib.no/INFO216/jtms#supports" );
    
    public static final Resource BELIEF = m_model.createResource( "http://139.uib.no/INFO216/jtms#Belief" );
    
    /** <p>A belief that is always disabled.</p> */
    public static final Resource CONTRADICTION = m_model.createResource( "http://139.uib.no/INFO216/jtms#Contradiction" );
    
    /** <p>A justification, of which at least one is needed to enable some belief. Has 
     *  two antecedent lists: in and out. If all antecedents in the in-list are enabled, 
     *  and all antecedents in the out-list are disabled, the justification holds. 
     *  It does not hold in all other cases.</p>
     */
    public static final Resource JUSTIFICATION = m_model.createResource( "http://139.uib.no/INFO216/jtms#Justification" );
    
    /** <p>A belief enabled unconditionally.</p> */
    public static final Resource PREMISE = m_model.createResource( "http://139.uib.no/INFO216/jtms#Premise" );
    
}
